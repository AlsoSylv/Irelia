	{
	"components": {
		"schemas": {
			"AbilityResource": {
				"description": "Ability Resource",
				"enum": [
					"MANA",
					"ENERGY",
					"NONE",
					"SHIELD",
					"BATTLEFURY",
					"DRAGONFURY",
					"RAGE",
					"HEAT",
					"GNARFURY",
					"FEROCITY",
					"BLOODWELL",
					"WIND",
					"AMMO",
					"MOONLIGHT",
					"OTHER",
					"MAX"
				],
				"type": "string"
			},
			"TeamID": {
				"description": "Team identification",
				"enum": [
					"ALL",
					"UNKNOWN",
					"ORDER",
					"CHAOS",
					"NEUTRAL"
				],
				"type": "string"
			},
			"Position": {
				"description": "Player position",
				"type": "string",
				"enum": [
					"TOP",
					"JUNGLE",
					"MIDDLE",
					"BOTTOM",
					"UTILITY",
					"NONE",
					"UNKNOWN"
				]
			},
			"DragonType": {
				"description": "Type of the Dragon just killed",
				"type": "string",
				"enum": [
					"Fire",
					"Earth",
					"Water",
					"Air",
					"Hextech",
					"Chemtech",
					"Elder",
					"Unknown"
				]
			},
			"GameMode": {
				"description": "The Game Mode Currently being played",
				"type": "string",
				"enum": [
					"CLASSIC",
					"ODIN",
					"TUTORIAL",
					"TUTORIAL_MODULE_1",
					"TUTORIAL_MODULE_2",
					"TUTORIAL_MODULE_3",
					"URF",
					"PRACTICETOOL",
					"ONEFORALL",
					"GAMEMODEX",
					"ULTBOOK",
					"CHERRY",
					"Other"
				]
			},
			"MapName": {
				"description": "Name Of The Current Map",
				"enum": [
					"Map3",
					"Map10",
					"Map11",
					"Map12",
					"Map21",
					"Map22",
					"Map30",
					"Other"
				]
			},
			"MapTerrain": {
				"description": "Terrain Of The Current Map",
				"default": "Default",
				"enum": [
					"Default",
					"Internal",
					"Ocean",
					"Mountain",
					"Cloud",
					"Hextech",
					"Chemtech"
				]
			},
			"AllGameData": {
				"description": "All Data For The Current Game",
				"properties": {
					"activePlayer": {
						"description": "The person who is playing, this is null in spectator mode",
						"nullable": true,
						"type": "object",
						"additionalProperties": {
							"$ref": "#/components/schemas/ActivePlayer"
						}
					},
					"allPlayers": {
						"description": "All players currently in the game",
						"type": "array",
						"additionalProperties": {
							"$ref": "#/components/schemas/AllPlayer"
						}
					},
					"events": {
						"description": "Events that have taken place during the game",
						"type": "object",
						"additionalProperties": {
							"$ref": "#/components/schemas/Events"
						}
					},
					"game_data": {
						"description": "Data about the current match taking place",
						"type": "object",
						"additionalProperties": {
							"$ref": "#/components/schemas/GameData"
						}
					}
				}
			},
			"GameData": {
				"properties": {
					"gameMode": {
						"$ref": "#/components/schemas/GameMode"
					},
					"gameTime": {
						"description": "The current time of the game, in seconds",
						"type": "number",
						"format": "float"
					},
					"mapName": {
						"$ref": "#/components/schemas/MapName"
					},
					"mapNumber": {
						"type": "integer",
						"format": "int32"
					},
					"mapTerrain": {
						"$ref": "#/components/schemas/MapTerrain"
					}
				}
			},
			"ActivePlayer": {
				"properties": {
					"abilities": {
						"nullable": true,
						"type": "object",
						"additionalProperties": {
							"$ref": "#/components/schemas/Abilities"
						}
					},
					"championStats": {
						"nullable": true,
						"type": "object",
						"additionalProperties": {
							"$ref": "#/components/schemas/ChampionStats"
						}
					},
					"currentGold": {
						"nullable": true,
						"description": "Current gold of the summoner",
						"type": "number",
						"format": "float"
					},
					"fullRunes": {
						"nullable": true,
						"type": "object",
						"additionalProperties": {
							"$ref": "#/components/schemas/Runes"
						}
					},
					"level": {
						"nullable": true,
						"type": "integer",
						"description": "Level of the current player"
					},
					"summonerName": {
						"nullable": true,
						"type": "string",
						"format": "{NAME}#{TAG}",
						"description": "Name and Tag of the current summoner"
					}
				}
			},
			"AllPlayer": {
				"properties": {
					"championName": {
						"type": "string"
					},
					"isBot": {
						"type": "boolean"
					},
					"isDead": {
						"type": "boolean"
					},
					"items": {
						"type": "array",
						"additionalProperties": {
							"$ref": "#/components/schemas/Item"
						}
					},
					"level": {
						"type": "integer"
					},
					"position": {
						"$ref": "#/components/schemas/Position"
					},
					"rawChampionName": {
						"type": "string"
					},
					"respawnTimer": {
						"type": "number",
						"format": "float"
					},
					"runes": {
						"$ref": "#/components/schemas/Runes"
					},
					"skinID": {
						"type": "integer"
					},
					"summonerSpells": {
						"$ref": "#/components/schemas/SummonerSpells"
					},
					"team": {
						"$ref": "#/components/schemas/TeamID"
					},
					"skinName": {
						"type": "string",
						"nullable": true
					},
					"rawSkinName": {
						"type": "string",
						"nullable": true
					}
				}
			},
			"Item": {
				"properties": {
					"canUse": {
						"type": "boolean"
					},
					"consumable": {
						"type": "boolean"
					},
					"count": {
						"type": "integer"
					},
					"displayName": {
						"type": "string"
					},
					"itemID": {
						"type": "integer"
					},
					"price": {
						"type": "integer"
					},
					"rawDescription": {
						"type": "string"
					},
					"rawDisplayName": {
						"type": "string"
					},
					"slot": {
						"type": "integer"
					}
				}
			},
			"Runes": {
				"properties": {
					"keystone": {
						"$ref": "#/components/schemas/Rune"
					},
					"primaryRuneTree": {
						"$ref": "#/components/schemas/Rune"
					},
					"secondaryRuneTree": {
						"$ref": "#/components/schemas/Rune"
					},
					"generalRunes": {
						"description": "Primary and secondary runes",
						"maxLength": 6,
						"nullable": true,
						"type": "array",
						"additionalProperties": {
							"$ref": "#/components/schemas/Rune"
						}
					},
					"statRunes": {
						"description": "The little stat stones in the bottom right that you never change",
						"maxLength": 2,
						"nullable": true,
						"type": "array",
						"additionalProperties": {
							"$ref": "#/components/schemas/Rune"
						}
					}
				}
			},
			"Rune": {
				"properties": {
					"displayName": {
						"nullable": true,
						"type": "string"
					},
					"id": {
						"type": "integer"
					},
					"rawDescription": {
						"type": "string"
					},
					"rawDisplayName": {
						"nullable": true,
						"type": "string"
					}
				}
			},
			"SummonerSpells": {
				"properties": {
					"summonerSpellOne": {
						"$ref": "#/components/schemas/SummonerSpell"
					},
					"summonerSpellTwo": {
						"$ref": "#/components/schemas/SummonerSpell"
					}
				}
			},
			"SummonerSpell": {
				"properties": {
					"displayName": {
						"type": "string"
					},
					"rawDescription": {
						"type": "string"
					},
					"rawDisplayName": {
						"type": "string"
					}
				}
			},
			"Abilities": {
				"properties": {
					"passive": {
						"$ref": "#/components/schemas/Ability"
					},
					"q": {
						"$ref": "#/components/schemas/Ability"
					},
					"w": {
						"$ref": "#/components/schemas/Ability"
					},
					"e": {
						"$ref": "#/components/schemas/Ability"
					},
					"r": {
						"$ref": "#/components/schemas/Ability"
					}
				}
			},
			"Ability": {
				"properties": {
					"displayName": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"rawDescription": {
						"type": "string"
					},
					"rawDisplayName": {
						"type": "string"
					},
					"abilityLevel": {
						"description": "abilityLevel is null if you are getting the passive",
						"type": "integer",
						"nullable": true,
						"minimum": 0,
						"maximum": 5
					}
				}
			},
			"ChampionStats": {
				"properties": {
					"abilityPower": {
						"type": "number",
						"format": "float"
					},
					"armor": {
						"type": "number",
						"format": "float"
					},
					"armorPenetrationFlat": {
						"type": "number",
						"format": "float"
					},
					"armorPenetrationPercent": {
						"type": "number",
						"format": "float"
					},
					"abilityHaste": {
						"type": "number",
						"format": "float"
					},
					"attackDamage": {
						"type": "number",
						"format": "float"
					},
					"attackRange": {
						"type": "number",
						"format": "float"
					},
					"attackSpeed": {
						"type": "number",
						"format": "float"
					},
					"bonusArmorPenetrationPercent": {
						"type": "number",
						"format": "float"
					},
					"bonusMagicPenetrationPercent": {
						"type": "number",
						"format": "float"
					},
					"critChance": {
						"type": "number",
						"format": "float"
					},
					"critDamage": {
						"type": "number",
						"format": "float"
					},
					"currentHealth": {
						"type": "number",
						"format": "float"
					},
					"healShieldPower": {
						"type": "number",
						"format": "float"
					},
					"healthRegenRate": {
						"type": "number",
						"format": "float"
					},
					"lifeSteal": {
						"type": "number",
						"format": "float"
					},
					"magicLethality": {
						"type": "number",
						"format": "float"
					},
					"magicPenetrationFlat": {
						"type": "number",
						"format": "float"
					},
					"magicPenetrationPercent": {
						"type": "number",
						"format": "float"
					},
					"magicResist": {
						"type": "number",
						"format": "float"
					},
					"maxHealth": {
						"type": "number",
						"format": "float"
					},
					"moveSpeed": {
						"type": "number",
						"format": "float"
					},
					"omnivamp": {
						"type": "number",
						"format": "float"
					},
					"physicalLethality": {
						"type": "number",
						"format": "float"
					},
					"physicalVamp": {
						"type": "number",
						"format": "float"
					},
					"resourceMax": {
						"type": "number",
						"format": "float"
					},
					"resourceRegenRate": {
						"type": "number",
						"format": "float"
					},
					"resourceType": {
						"$ref": "#/components/schemas/AbilityResource"
					},
					"resourceValue": {
						"type": "number",
						"format": "float"
					},
					"spellVamp": {
						"type": "number",
						"format": "float"
					},
					"tenacity": {
						"type": "number",
						"format": "float"
					}
				}
			},
			"Events": {
				"properties": {
					"events": {
						"type": "array",
						"additionalProperties": {
							"$ref": "#/components/schemas/Event"
						}
					}
				}
			},
			"Event": {
				"properties": {
					"EventID": {
						"type": "integer"
					},
					"EventTime": {
						"type": "number",
						"format": "float"
					},
					"EventName": {
						"type": "string",
						"enum": [
							"Ace",
							"GameStart",
							"MinionsSpawning",
							"FirstBlood",
							"ChampionKill",
							"Multikill",
							"TurretKilled",
							"FirstBrick",
							"DragonKill",
							"HordeKill",
							"HeraldKill",
							"BaronKill",
							"InhibKilled",
							"GameEnd"
						]
					},
					"Acer": {
						"type": "string"
					},
					"AcingTeam": {
						"$ref": "#/components/schemas/TeamID"
					},
					"VictimName": {
						"type": "string"
					},
					"Assisters": {
						"type": "array",
						"additionalProperties": {
							"type": "string"
						}
					},
					"KillerName": {
						"type": "string"
					},
					"Recipient": {
						"type": "string"
					},
					"KillStreak": {
						"type": "integer"
					},
					"TurretKilled": {
						"type": "string"
					},
					"DragonType": {
						"type": "string",
						"enum": [
							"Fire",
							"Earth",
							"Water",
							"Air",
							"Hextech",
							"Chemtech",
							"Elder",
							"Unknown"
						]
					},
					"Stolen": {
						"type": "string",
						"enum": ["True", "False"]
					},
					"InhibKilled": {
						"type": "string"
					},
					"InhibRespawned": {
						"type": "string"
					},
					"Result": {
						"type": "string",
						"enum": ["Win", "Lose"]
					}
				}
			}
		}
	},
	"info": {
		"description": "League of Legends Game Client",
		"title": "LoLClient",
		"version": "1.0.0"
	},
	"openapi": "3.0.0",
	"paths": {
		"/liveclientdata/activeplayer": {
			"get": {
				"operationId": "GetLiveclientdataActiveplayer",
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ActivePlayer"
								}
							}
						},
						"description": "Successful response"
					}
				},
				"summary": "Get all data about the active player",
				"tags": [
					"champions",
					"activePlayer"
				]
			}
		},
		"/liveclientdata/activeplayerabilities": {
			"get": {
				"operationId": "GetLiveclientdataActiveplayerabilities",
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"additionalProperties": true,
									"type": "object"
								}
							}
						},
						"description": "Successful response"
					}
				},
				"summary": "Get Abilities for the active player",
				"tags": [
					"champions",
					"abilities",
					"activePlayer"
				]
			}
		},
		"/liveclientdata/activeplayername": {
			"get": {
				"operationId": "GetLiveclientdataActiveplayername",
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						},
						"description": "Successful response"
					}
				},
				"summary": "Returns the player name",
				"tags": [
					"activePlayer"
				]
			}
		},
		"/liveclientdata/activeplayerrunes": {
			"get": {
				"operationId": "GetLiveclientdataActiveplayerrunes",
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"additionalProperties": true,
									"type": "object"
								}
							}
						},
						"description": "Successful response"
					}
				},
				"summary": "Retrieve the full list of runes for the active player",
				"tags": [
					"runes",
					"activePlayer"
				]
			}
		},
		"/liveclientdata/allgamedata": {
			"get": {
				"operationId": "GetLiveclientdataAllgamedata",
				"parameters": [
					{
						"description": "ID of the next event you expect to see",
						"in": "query",
						"name": "eventID",
						"required": false,
						"schema": {
							"format": "int32",
							"type": "integer"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"additionalProperties": true,
									"type": "object"
								}
							}
						},
						"description": "Successful response"
					}
				},
				"summary": "Get all available data",
				"tags": [
					"all"
				]
			}
		},
		"/liveclientdata/eventdata": {
			"get": {
				"operationId": "GetLiveclientdataEventdata",
				"parameters": [
					{
						"description": "ID of the next event you expect to see",
						"in": "query",
						"name": "eventID",
						"required": false,
						"schema": {
							"format": "int32",
							"type": "integer"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"additionalProperties": true,
									"type": "object"
								}
							}
						},
						"description": "Successful response"
					}
				},
				"summary": "Get a list of events that have occurred in the game",
				"tags": [
					"champions",
					"events"
				]
			}
		},
		"/liveclientdata/gamestats": {
			"get": {
				"operationId": "GetLiveclientdataGamestats",
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"additionalProperties": true,
									"type": "object"
								}
							}
						},
						"description": "Successful response"
					}
				},
				"summary": "Basic data about the game",
				"tags": [
					"game"
				]
			}
		},
		"/liveclientdata/playeritems": {
			"get": {
				"operationId": "GetLiveclientdataPlayeritems",
				"parameters": [
					{
						"description": "Summoner name of player",
						"in": "query",
						"name": "summonerName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"additionalProperties": true,
									"type": "object"
								}
							}
						},
						"description": "Successful response"
					}
				},
				"summary": "Retrieve the list of items for the player",
				"tags": [
					"items",
					"allPlayers"
				]
			}
		},
		"/liveclientdata/playerlist": {
			"get": {
				"operationId": "GetLiveclientdataPlayerlist",
				"parameters": [
					{
						"description": "Heroes team ID. Optional, returns all players on all teams if null. ",
						"in": "query",
						"name": "teamID",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/TeamID"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"additionalProperties": true,
									"type": "object"
								}
							}
						},
						"description": "Successful response"
					}
				},
				"summary": "Retrieve the list of heroes in the game and their stats",
				"tags": [
					"champions",
					"units",
					"allPlayers"
				]
			}
		},
		"/liveclientdata/playermainrunes": {
			"get": {
				"operationId": "GetLiveclientdataPlayermainrunes",
				"parameters": [
					{
						"description": "Summoner name of player",
						"in": "query",
						"name": "summonerName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"additionalProperties": true,
									"type": "object"
								}
							}
						},
						"description": "Successful response"
					}
				},
				"summary": "Retrieve the basic runes of any player",
				"tags": [
					"allPlayers",
					"runes"
				]
			}
		},
		"/liveclientdata/playerscores": {
			"get": {
				"operationId": "GetLiveclientdataPlayerscores",
				"parameters": [
					{
						"description": "Summoner name of player",
						"in": "query",
						"name": "summonerName",
						"required": true,
						"schema": {
							"type": "string"
						}					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"additionalProperties": true,
									"type": "object"
								}
							}
						},
						"description": "Successful response"
					}
				},
				"summary": "Retrieve the list of the current scores for the player",
				"tags": [
					"allPlayers",
					"scores"
				]
			}
		},
		"/liveclientdata/playersummonerspells": {
			"get": {
				"operationId": "GetLiveclientdataPlayersummonerspells",
				"parameters": [
					{
						"description": "Summoner name of player",
						"in": "query",
						"name": "summonerName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"additionalProperties": true,
									"type": "object"
								}
							}
						},
						"description": "Successful response"
					}
				},
				"summary": "Retrieve the list of the summoner spells for the player",
				"tags": [
					"allPlayers"
				]
			}
		},
		"/swagger/v1/api-docs": {
			"get": {
				"operationId": "HttpApiDocsV1",
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"additionalProperties": true,
									"type": "object"
								}
							}
						},
						"description": "Successful response"
					}
				},
				"summary": "Retrieves the API documentation resource listing",
				"tags": [
					"builtin"
				]
			}
		},
		"/swagger/v1/api-docs/{api}": {
			"get": {
				"operationId": "HttpApiDeclarationV1",
				"parameters": [
					{
						"description": "API to get a declaration for",
						"in": "path",
						"name": "api",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"additionalProperties": true,
									"type": "object"
								}
							}
						},
						"description": "Successful response"
					}
				},
				"summary": "Retrieves the API declaration for a supported API",
				"tags": [
					"builtin"
				]
			}
		},
		"/swagger/v2/swagger.json": {
			"get": {
				"operationId": "HttpApiDocsV2",
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"additionalProperties": true,
									"type": "object"
								}
							}
						},
						"description": "Successful response"
					}
				},
				"summary": "Retrieves the API documentation",
				"tags": [
					"builtin"
				]
			}
		},
		"/swagger/v3/openapi.json": {
			"get": {
				"operationId": "HttpApiDocsV3",
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"additionalProperties": true,
									"type": "object"
								}
							}
						},
						"description": "Successful response"
					}
				},
				"summary": "Retrieves the API documentation",
				"tags": [
					"builtin"
				]
			}
		}
	}
}